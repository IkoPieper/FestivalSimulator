# programm durchläuft objekte, deren quests, 
wenn nicht getriggert: prüft für den quest die trigger, triggert
wenn bereits getriggert: prüft für den quest die off-trigger, triggert


# im programm die funktion 
void quest_play_flunkyball(accociated_objects) {

  # wähle erstes objekt, das sind ausnahmsweise wir selbst (siehe accociated objects)
  obj = get_object(obj, 1); 
  start_text(1);     # trigger dessen textbox nr. 1, die mit diesem quest verbunden ist

  wait_frames(60);   # warte 60 frames

  stop_text(1);      # stoppe dessen textbox nr. 1, die mit diesem quest verbunden ist
  start_animation(3) # trigger dessen animation nr. 3, die mit diesem quest verbunden ist
  start_movement(1)  # trigger auch dessen movement nr. 1, die mit diesem quest verbunden ist

  wait_frames(500);

  stop_animation(3); # stoppe dessen animation nr. 3, die mit diesem quest verbunden ist
  stop_movement(1);  # stoppe auch dessen movement nr. 1, die mit diesem quest verbunden ist

  # belohne den hero
}
# ende funktion


# im programm die funktion 
void quest_boerp(accociated_objects) {

  # wähle erstes objekt, das sind ausnahmsweise wir selbst (siehe accociated objects)
  obj = get_object(obj, 1); 
  start_text(1);      # trigger dessen textbox nr. 1, die mit diesem quest verbunden ist
  start_animation(1); # ist die gleiche animation wie bei flunkyball die animation nr. 3
  wait_frames(500);
  stop_animation(1);

}
# ende funktion

-------------------------------------------------------------------

object = 4
pos_x     = 40
pos_y     = 80

# quest ids müssen eindeutig sein, um informationen zwischen objekten austauschen zu können, sagen wir 666 ist "quest_play_flunkyball()"
quest    = 666
accociated_objects = 4, 22, 44, 55 # objekte die im quest involviert sind
trigger  = collision
partner  = 2 # thats our hero

quest    = 667                  # boerp quest id
accociated_objects = 4          # hat diesmal nur mit uns selbst zu tun
trigger  = random               # kann jederzeit passieren
expected_value_frames = 5000    # mittlerer abstand zwischen random events


movement = 1
quest_id     = 666
id           = 1
trigger      = frame
frame        = 50000
shift_x      = 40,  0
shift_y      =  0, 30
frame        = 20, 30
repeat_delay = 1000    # wiederhole nach 1000 frames



animation = 1
quest_id =  666, 667 # gehoert zu quest 666 und 667
id       =    3,   1 # ist die dritte animation von quest 666, die erste von 667
trigger  = frame     # trigger fuer einfache sachen ohne zusammenhänge. brauchen wir das?
frame    = 50000
file = bild1.bmp
file = bild2.bmp
file = bild3.bmp
file = bild4.bmp
frame_delay  = 10
repeat_delay = 0  
# die animationen könnten noch ein repeat delay gebrauchen 0 = aus, 1 = praktisch dauerschleifeS

textbox = 1
quest_id = 667     # gehoert zu quest 667, damit quest 667 die textbox findet
id = 1             # ist die textbox nr. 1 im quest
language    = de
text_accept = "Huiiii!"
language    = en
text_accept = "Huiiii!"

textbox = 2
quest_id = 666     # gehoert zu quest 666, damit quest 666 die textbox findet
id = 1             # ist die textbox nr. 1 im quest
language    = de
text        = "Hallo Festi! Willst du eine Runde Flunken? Das fänden wir echt dufte!"
language    = en
text_invite = "Hello Festi! Wanna Flunk? That would be awesome!"

textbox = 3
quest_id = 666     # gehoert zu quest 666, damit quest 666 die textbox findet
id = 2             # ist die textbox nr. 2 im quest
language    = de
text        = "Börp!!!"
language    = en
text        = "Börp!!!"

